{"version":3,"sources":["webpack://typescript-customer-invoice/./src/accountClass.ts","webpack://typescript-customer-invoice/./src/customerClass.ts","webpack://typescript-customer-invoice/./src/invoiceClass.ts","webpack://typescript-customer-invoice/./src/scriptMain.ts","webpack://typescript-customer-invoice/webpack/bootstrap","webpack://typescript-customer-invoice/webpack/startup"],"names":["accountData","customerData","ID","customer","name","balance","toFixed","getID","this","getCustomer","getBalance","setBalance","balanceNewValue","toString","getCustomerName","deposit","amountNewValue","withdraw","amountToDeduce","console","log","Customer","Account","discount","getName","getDiscount","setDiscount","discountNew","invoiceData","amount","setCustomer","customerNewName","getAmount","setAmount","amountValue","getAmountAfterDiscount","Invoice","objCustomer","customerOne","invoiceOne","accountOne","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","call"],"mappings":"sdAAA,IAEA,cAKI,WAAYA,EAA4BC,GAAxC,MACI,YAAMA,IAAa,K,OACnB,EAAKC,GAAKF,EAAYE,GACtB,EAAKC,SAAWF,EAAaG,KAC7B,EAAKC,SAAWL,EAAYK,QAAQC,QAAQ,G,EA2BpD,OApC6B,OAWzB,YAAAC,MAAA,WACI,OAAOC,KAAKN,IAEhB,YAAAO,YAAA,WACI,OAAOD,KAAKL,UAEhB,YAAAO,WAAA,WACI,OAAOF,KAAKH,SAEhB,YAAAM,WAAA,SAAWC,GACPJ,KAAKH,QAAUO,GAEnB,YAAAC,SAAA,WACI,OAAUL,KAAKL,SAAQ,IAAIK,KAAKN,GAAE,cAAcM,KAAKH,QAAQC,QAAQ,IAEzE,YAAAQ,gBAAA,WACI,OAAON,KAAKJ,MAEhB,YAAAW,QAAA,SAAQC,GACJR,KAAKH,QAAUW,GAEnB,YAAAC,SAAA,SAASC,GACFV,KAAKH,QAAUa,EAAgBV,KAAKH,SAAWa,EAC7CC,QAAQC,IAAI,6DAEzB,EApCA,CAFA,OAE6BC,UAAhB,EAAAC,W,+ECFb,iBAKI,WAAYrB,GACTO,KAAKN,GAAKD,EAAaC,GACvBM,KAAKJ,KAAOH,EAAaG,KACzBI,KAAKe,SAAWtB,EAAasB,SAkBpC,OAfI,YAAAhB,MAAA,WACI,OAAOC,KAAKN,IAEhB,YAAAsB,QAAA,WACI,OAAOhB,KAAKJ,MAEhB,YAAAqB,YAAA,WACI,OAAOjB,KAAKe,UAEhB,YAAAG,YAAA,SAAYC,GACRnB,KAAKe,SAAWI,GAEpB,YAAAd,SAAA,WACI,OAAUL,KAAKJ,KAAI,IAAII,KAAKN,GAAE,KAEtC,EA1BA,GAAa,EAAAmB,Y,4bCAb,IAEA,cAKI,WAAYO,EAA4B3B,GAAxC,MACI,YAAMA,IAAa,K,OACnB,EAAKC,GAAK0B,EAAY1B,GACtB,EAAKC,SAAWF,EAAaG,KAC7B,EAAKyB,OAASD,EAAYC,O,EAoBlC,OA7B6B,OAWzB,YAAAtB,MAAA,WACI,OAAOC,KAAKN,IAEhB,YAAAO,YAAA,WACI,OAAOD,KAAKL,UAEhB,YAAA2B,YAAA,SAAYC,GACRvB,KAAKL,SAAW4B,GAEpB,YAAAC,UAAA,WACI,OAAOxB,KAAKqB,OAAOhB,YAEvB,YAAAoB,UAAA,SAAUC,GACN1B,KAAKqB,OAASK,GAElB,YAAAC,uBAAA,WACI,OAAO3B,KAAKqB,OAASrB,KAAKe,UAElC,EA7BA,CAFA,OAE6BF,UAAhB,EAAAe,W,cCFb,aACA,SACA,SAEIC,EAAc,CAACnC,GAAI,EAAGE,KAAM,OAAQmB,SAAU,GAI9Ce,EAAc,IAAI,EAAAjB,SAASgB,GAC/BlB,QAAQC,IAAIkB,EAAYzB,YAExB,IAAI0B,EAAa,IAAI,EAAAH,QANJ,CAAClC,GAAI,EAAG2B,OAAQ,KAMQQ,GACzClB,QAAQC,IAAImB,EAAW9B,eAEvB,IAAI+B,EAAa,IAAI,EAAAlB,QARJ,CAACpB,GAAI,EAAGG,QAAS,MAQOgC,GACzClB,QAAQC,IAAIoB,EAAW3B,YAEvB2B,EAAWvB,SAAS,OChBhBwB,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUC,QAG3C,IAAIC,EAASJ,EAAyBE,GAAY,CAGjDC,QAAS,IAOV,OAHAE,EAAoBH,GAAUI,KAAKF,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAGpEG,EAAOD,QClBfF,CAAoB,M","file":"bundle.js","sourcesContent":["import {Customer, customerConfig} from \"./customerClass\";\r\n\r\nexport class Account extends Customer{\r\n    ID: number;\r\n    customer: string;\r\n    balance: number;\r\n    \r\n    constructor(accountData: accountConfig, customerData: customerConfig){\r\n        super(customerData);\r\n        this.ID = accountData.ID;\r\n        this.customer = customerData.name;\r\n        this.balance = +accountData.balance.toFixed(2);\r\n    }\r\n    getID(): number{\r\n        return this.ID;\r\n    }\r\n    getCustomer(): string{\r\n        return this.customer;\r\n    }\r\n    getBalance(): number{\r\n        return this.balance;\r\n    }\r\n    setBalance(balanceNewValue: number): void{\r\n        this.balance = balanceNewValue;\r\n    }\r\n    toString(): string{\r\n        return `${this.customer}(${this.ID}) balance=$${this.balance.toFixed(2)}`;\r\n    }\r\n    getCustomerName(){\r\n        return this.name;\r\n    }\r\n    deposit(amountNewValue: number): void{\r\n        this.balance = amountNewValue;\r\n    }\r\n    withdraw(amountToDeduce: number): void{\r\n        if(this.balance > amountToDeduce )this.balance -= amountToDeduce;\r\n        else console.log('Amount to withdraw exceeds the current available balance');\r\n    }\r\n}\r\n\r\nexport interface accountConfig{\r\n    ID: number;\r\n    balance: number;\r\n}","export class Customer{\r\n    ID: number;\r\n    name: string;\r\n    discount: number;\r\n\r\n    constructor(customerData: customerConfig){\r\n       this.ID = customerData.ID;\r\n       this.name = customerData.name;\r\n       this.discount = customerData.discount;\r\n    }\r\n    \r\n    getID(): number{\r\n        return this.ID;\r\n    }\r\n    getName(): string{\r\n        return this.name;\r\n    }\r\n    getDiscount(): number{\r\n        return this.discount;\r\n    } \r\n    setDiscount(discountNew: number): void{\r\n        this.discount = discountNew;\r\n    }\r\n    toString(): string{\r\n        return `${this.name}(${this.ID})`;\r\n    }\r\n}\r\n\r\nexport interface customerConfig{\r\n    ID: number;\r\n    name: string;\r\n    discount: number;\r\n }\r\n\r\n\r\n\r\n\r\n\r\n","import {Customer, customerConfig} from \"./customerClass\";\r\n\r\nexport class Invoice extends Customer{\r\n    ID: number;\r\n    customer: string;\r\n    amount: number;\r\n    \r\n    constructor(invoiceData: invoiceConfig, customerData: customerConfig){\r\n        super(customerData);\r\n        this.ID = invoiceData.ID;\r\n        this.customer = customerData.name;\r\n        this.amount = invoiceData.amount;\r\n    }\r\n    getID(): number{\r\n        return this.ID;\r\n    }\r\n    getCustomer(): string{\r\n        return this.customer;\r\n    }\r\n    setCustomer(customerNewName: string): void{\r\n        this.customer = customerNewName;\r\n    }\r\n    getAmount(): string{\r\n        return this.amount.toString();\r\n    }\r\n    setAmount(amountValue: number): void{\r\n        this.amount = amountValue;\r\n    }\r\n    getAmountAfterDiscount(): number{\r\n        return this.amount - this.discount;\r\n    }\r\n}\r\n\r\nexport interface invoiceConfig{\r\n   ID: number;\r\n   amount: number;\r\n}","import {Customer, customerConfig} from \"./customerClass\";\r\nimport {Invoice, invoiceConfig} from \"./invoiceClass\";\r\nimport {Account, accountConfig} from \"./accountClass\";\r\n\r\nlet objCustomer = {ID: 1, name: 'John', discount: 5};\r\nlet objInvoice = {ID: 1, amount: 500};\r\nlet objAccount = {ID: 1, balance: 1500};\r\n\r\nlet customerOne = new Customer(objCustomer);\r\nconsole.log(customerOne.toString());\r\n\r\nlet invoiceOne = new Invoice(objInvoice, objCustomer);\r\nconsole.log(invoiceOne.getCustomer());\r\n\r\nlet accountOne = new Account(objAccount, objCustomer);\r\nconsole.log(accountOne.toString());\r\n\r\naccountOne.withdraw(2000);\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(790);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}